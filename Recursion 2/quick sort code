void swap(int *a,int *b)
{
    int temp=*a;
     *a=*b;
   *b=temp;
}

int partition (int arr[], int low, int high) 
{ 
	int pivot = arr[high]; // pivot 
	int i = (low - 1); // Index of smaller element 

	for (int j = low; j <= high - 1; j++) 
	{ 
		// If current element is smaller than the pivot 
		if (arr[j] < pivot) 
		{ 
			i++; // increment index of smaller element 
			swap(&arr[i], &arr[j]); 
		} 
	} 
	swap(&arr[i + 1], &arr[high]); 
	return (i + 1); 
} 
void QuickSort(int a[],int s,int e)
{
    if(s>=e)
        return;
    int p=partition(a,s,e);
    QuickSort(a,s,p-1);
    QuickSort(a,p+1,e);

}
void quickSort(int input[], int size) {

    int start = 0;
    int end = size-1;

    QuickSort(input,start,end);

}
